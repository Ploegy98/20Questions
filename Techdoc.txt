#####################################################################
# Author:
# Adrian Negrea
#

v0.1 
# 20 Questions Game
# This program is a game which aims to guess the animal that someone
# is thinking about using a series of 20 yes or no questions.
#
# A database is used to store the questions in a table, with a
# separate table holding the values which each animal has for each
# question.
#
# On program start:
# - user given 3 options:
#   Start a new game
#   Add an animal
#   Exit
#
# On animal addition:
# - all the questions in the questions table are asked in order
# - the answers are stored in a dictionary in order to preserve
#   correct order
# - a new row is added to the animals table with the name of the
#   animal and the answers that have just been supplied
#
# On game start:
# - a dictionary is initialized which holds the value of each
#   animal, which is incremented by 1 each time the answer given
#   by the player matches up with the value of that animal for that
#   question
#   animals_values = {'ANIMAL NAME': VALUE}
# - a variable is initialized in order to hold the highest value
#   (currently 0)
#   max_value = 0
# - a variable is initialized in order to hold the name of the
#   animal with the highest value
#   max_animal = ""
#
# During the game:
# - a random question is asked and then that question is kept track
#   of so that it will not be asked again
# - when the user supplies an answer to the random question the
#   animals table is checked for the animals which fit the
#   description and their values in the animals_values is increased
#   by 1
# - if the value of an animal exceeds that of max_value after it is
#   incremented, the value of this animal will become the new
#   value for max_value and max_animal will hold its name
#
# End of game:
# - the game supplies max_animal as a guess to the player
# - the player answers if the guess was in fact the animal they
#   were thinking of
# - user returned to the main_menu
#####################################################################

v0.2
# Changes from previous version:
# Added frequency column to animals table
# - Third column
# - Between animal name and q1
# 0 now default value for all questions in animals table
#
# Added post_game_actions()
# - Will handle all the data and update the animals table
#   according to the results of the game.
#####################################################################

v0.3
# Changes from previous version:
# Answers dictionary stores the questions asked during
# each game along with the answers provided.
#
# New entry added if guess was incorrect
#####################################################################

v0.4
# Changes from previous version:
# Animal table stores values as numeric values instead
# of integer values.
#
# Numeric values used in the calculations for max_value
# and max_animal
#####################################################################

v0.5
# Changes from previous version:
# New animal added successfully to the animals table
# along with its data
#
# Values are added correctly to the animals table on
# correct guess
#####################################################################

v0.6
# Changes from previous version:
# update_animal(animal, answers) added in order to handle
# post-game entry updates
# Now a wrong guess still updates db if the animal the user
# was thinking about is actually already in db
#####################################################################

v1.0
# FIRST RELEASE VERSION
# Changes from previous version:
# All the files that were not being used removed from project
#####################################################################

v1.1
# Changes from previous version:
# Keeping track of second best guess.
#####################################################################
